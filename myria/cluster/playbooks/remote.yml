---
# ansible-playbook "$MYRIA_ANSIBLE_DIR/remote.yml" --extra-vars "$ANSIBLE_VARS" --private-key "$PRIVATE_KEY_FILE"
# NB: this playbook is expected to be called with either `--tags=provision`, `--tags=configure` or `--tags=update`!
# By (mis)design, it is impossible to filter by tags within a playbook itself
# (tags within a role invocation actually apply the tags to every task within the role).
# The only way to achieve the same effect within a playbook is to use variables and
# conditionals instead of tags, and we don't want to go there (yet).

- name: Configure EC2 inventory
  hosts: localhost
  connection: local
  gather_facts: no
  tags: ['always']
  tasks:
  - name: Get coordinator group
    ec2_remote_facts:
      region: "{{ REGION }}"
      profile: "{{ PROFILE|default(omit) }}"
      filters:
        instance.group-name: "{{ CLUSTER_NAME }}"
        vpc-id: "{{ VPC_ID|default('*') }}"
        "tag:cluster-role": "coordinator"
    register: coordinator_facts
  - name: Get worker group
    ec2_remote_facts:
      region: "{{ REGION }}"
      profile: "{{ PROFILE|default(omit) }}"
      filters:
        instance.group-name: "{{ CLUSTER_NAME }}"
        vpc-id: "{{ VPC_ID|default('*') }}"
        "tag:cluster-role": "worker"
    register: worker_facts
  - name: Get inventory group
    ec2_remote_facts:
      region: "{{ REGION }}"
      profile: "{{ PROFILE|default(omit) }}"
      filters:
        instance.group-name: "{{ CLUSTER_NAME }}"
        vpc-id: "{{ VPC_ID|default('*') }}"
    register: cluster_facts
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: coordinator
    changed_when: false
    with_items: "{{ coordinator_facts.instances }}"
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: workers
    changed_when: false
    # we need to sort workers by stable order to rewrite Myria configuration file when workers are added
    with_items: "{{ worker_facts.instances | sort(attribute='tags.node-id') }}"
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: cluster
    changed_when: false
    # we need to sort workers by stable order to rewrite Myria configuration file when workers are added
    with_items: "{{ cluster_facts.instances | sort(attribute='tags.node-id') }}"

  # Add separate groups for hosts explicitly or implicitly specified for current run
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: coordinator_in_scope
    changed_when: false
    when: "(LIMIT_HOSTS is not defined) or ('{{item.public_ip_address}}' in LIMIT_HOSTS)"
    with_items: "{{ coordinator_facts.instances }}"
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: workers_in_scope
    changed_when: false
    when: "(LIMIT_HOSTS is not defined) or ('{{item.public_ip_address}}' in LIMIT_HOSTS)"
    with_items: "{{ worker_facts.instances }}"
  - add_host:
      name: "{{ item.public_ip_address }}"
      ansible_ssh_host: "{{ item.public_ip_address }}"
      private_ip_address: "{{ item.private_ip_address }}"
      public_ip_address: "{{ item.public_ip_address }}"
      private_dns_name: "{{ item.private_dns_name }}"
      public_dns_name: "{{ item.public_dns_name }}"
      tags: "{{ item.tags }}"
      groups: cluster_in_scope
    changed_when: false
    when: "(LIMIT_HOSTS is not defined) or ('{{item.public_ip_address}}' in LIMIT_HOSTS)"
    with_items: "{{ cluster_facts.instances }}"

- name: Configure common functionality on all nodes
  hosts: cluster_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - basenode
    - yarn-common
    - postgres
    - ganglia-monitor

- name: Configure YARN RM
  hosts: coordinator_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - yarn-master

- name: Configure YARN NM
  hosts: cluster_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - yarn-slave

- name: Configure Ganglia UI on coordinator
  hosts: coordinator_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - ganglia-metad
    - ganglia-web

- name: Configure and launch MyriaX on coordinator
  hosts: coordinator_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - myria-python
    - myria

- name: Install and launch myria-web on coordinator
  hosts: coordinator_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - gae
    - myria-web

- name: Install and launch jupyter-notebook on coordinator
  hosts: coordinator_in_scope
  remote_user: ubuntu
  become: yes
  gather_facts: no
  roles:
    - jupyter
