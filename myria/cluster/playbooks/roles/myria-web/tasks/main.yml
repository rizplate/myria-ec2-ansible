---
##
## tasks for installing  myria python
##

- name: Installing packages
  apt: name="{{item}}" update_cache=yes
  with_items:
    - git
  tags:
    - provision

- name: Create repo directory
  file: path={{myria_web_path}} state=directory owner={{myria_user}} group={{myria_group}} mode=0775
  tags:
    - provision

- name: Clone myria-web repository
  git: repo="{{myria_web_repository_url}}" dest="{{myria_web_path}}" version="{{myria_web_branch}}" recursive=yes update=yes force=yes
  become: yes
  become_user: "{{myria_user}}"
  tags:
    - provision
    - update

- name: Get old RACO commit
  command: "git rev-parse HEAD"
  args:
    chdir: "{{raco_repository_path}}"
  register: old_raco_commit
  tags:
    - provision
    - update

- name: Update RACO repository
  shell: "git fetch origin && git checkout {{raco_branch}} && git pull --rebase"
  args:
    chdir: "{{raco_repository_path}}"
  become: yes
  become_user: "{{myria_user}}"
  tags:
    - provision
    - update

- name: Get new RACO commit
  command: "git rev-parse HEAD"
  args:
    chdir: "{{raco_repository_path}}"
  register: new_raco_commit
  tags:
    - provision
    - update

- name: Check if raco is already installed
  shell: "python -c 'import raco'"
  register: raco_installed
  ignore_errors: True
  tags:
    - provision
    - update

- name: Setup raco
  shell: "python setup.py install"
  args:
    chdir: "{{raco_repository_path}}"
  when: raco_installed|failed or (old_raco_commit.stdout != new_raco_commit.stdout)
  tags:
    - provision
    - update

- name: Install myria-web service
  template: src=service.conf.j2 dest=/etc/init/myria-web.conf backup=yes mode=0644
  notify: restart myria-web
  tags:
    - configure

- name: Bounce myria-web service on update
  command: /bin/true
  notify: restart myria-web
  tags:
    - update
